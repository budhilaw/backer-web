name: PUSH Workflow

on:
  push:
    branches: [ main ]

jobs:
#  laravel-tests:
#    name: Testing the project
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#        with:
#          php-version: '7.4'
#
#      - uses: actions/checkout@v2
#
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#
#      - name: Install Dependencies
#        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#
#      - name: Generate key
#        run: php artisan key:generate
#
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#
#      - name: Create Database
#        run: |
#          mkdir -p database
#          touch database/database.sqlite
#
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        env:
#          DB_CONNECTION: sqlite
#          DB_DATABASE: database/database.sqlite
#        run: vendor/bin/phpunit

  build-frontend:
    name: Building the Frontend for Production Server

    runs-on: ubuntu-latest

    needs: laravel-tests

    if: github.ref == 'refs/heads/main'

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install NPM dependencies
        run: npm install

      - name: Compile assets for production
        run: npm run production

  deploy-production:
    name: Deploy Productionss
    runs-on: ubuntu-latest
    needs: [build-frontend]
    #if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Deploy
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          dep: deploy prod -v
